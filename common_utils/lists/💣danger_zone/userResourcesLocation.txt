'use strict';
/**
 * @param {!Object} validators
 * @param {!Function} name
 * @param {!Function} reject
 * @param {!Function} update
 * @param {!Function} fn
 * @param {string} key
 * @param {!Object} arg
 * @return {undefined}
 */
function asyncGeneratorStep(validators, name, reject, update, fn, key, arg) {
  try {
    var info = validators[key](arg);
    var value = info.value;
  } catch (createConnectionErr) {
    reject(createConnectionErr);
    return;
  }
  if (info.done) {
    name(value);
  } else {
    Promise.resolve(value).then(update, fn);
  }
}
/**
 * @param {!Function} fn
 * @return {?}
 */
function _asyncToGenerator(fn) {
  return function() {
    var document = this;
    /** @type {!Arguments} */
    var args = arguments;
    return new Promise(function(skeletonId, onRejected) {
      /**
       * @param {!Object} value
       * @return {undefined}
       */
      function run(value) {
        asyncGeneratorStep(options, skeletonId, onRejected, run, invoke, "next", value);
      }
      /**
       * @param {!Object} listeners
       * @return {undefined}
       */
      function invoke(listeners) {
        asyncGeneratorStep(options, skeletonId, onRejected, run, invoke, "throw", listeners);
      }
      var options = fn.apply(document, args);
      run(undefined);
    });
  };
}
var grab = function() {
  var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee(url) {
    var result;
    var output;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      for (; 1;) {
        switch(_context.prev = _context.next) {
          case 0:
            /** @type {number} */
            _context.next = 2;
            return fetch(url);
          case 2:
            result = _context.sent;
            if (!result.ok) {
              /** @type {number} */
              _context.next = 10;
              break;
            }
            /** @type {number} */
            _context.next = 6;
            return result.text();
          case 6:
            output = _context.sent;
            return _context.abrupt("return", output);
          case 10:
            console.log("HTTP-Error: " + result.status);
          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function(canCreateDiscussions) {
    return _ref4.apply(this, arguments);
  };
}()();

// ----------------------------------------------------------------------------------------------------------------- //

// Nano Core 2 - An adblocker
// Copyright (C) 2018-2019  Nano Core 2 contributors
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// ----------------------------------------------------------------------------------------------------------------- //

// For redirectable resources, see: https://github.com/NanoAdblocker/NanoCore2/tree/master/src/war

// ----------------------------------------------------------------------------------------------------------------- //


// ----------------------------------------------------------------------------------------------------------------- //

// Assign a variable when the document gets ready, 2 required arguments
// chain - The property chain
// value - The value to assign, must be 'null', 'true', or 'false'
//
/// nano-assign-variable-onready.js
(() => {
    var chain = '{{1}}';
    var value = '{{2}}';
    if (chain === '' || chain === '{{1}}') {
        return;
    }
    if (value === 'null') {
        value = null;
    } else if (value === 'true') {
        value = true;
    } else if (value === 'false') {
        value = false;
    } else {
        return;
    }
    var assign = function () {
        var parent = window;
        chain = chain.split('.');
        for (var i = 0; i < chain.length - 1; i++) {
            parent = parent[chain[i]];
        }
        parent[chain[chain.length - 1]] = value;
    };
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        assign();
    } else {
        addEventListener('DOMContentLoaded', assign);
    }
})();

// ----------------------------------------------------------------------------------------------------------------- //

// Experimental resources, these can change or break at any time

// Based on KAADIVVVV
// License: https://github.com/Robotex/KAADIVVVV/blob/master/LICENSE
//
/// nano-vvvvid-it.js
(() => {
    function defuse() {
        var checkAdv = function () {
            this.hasAdv = false;
        };
        vvvvid.models.PlayerObj.prototype.checkAdv = checkAdv;
        window[wnbshgd] = vvvvid.models.PlayerObj.prototype.checkAdv;
    }
    if (typeof vvvvid === 'object') {
        defuse();
    } else {
        addEventListener('DOMContentLoaded', defuse);
    }
})();

/// nano-colombiaonline-com.js
(() => {
    var magic = 'a' + Math.random().toString(36).substring(2);
    var testScript = "typeof otab == 'function'";
    var testComment = /\d{5,} \d{1,2}/;
    //
    var getter = function () {
        var script, temp;
        //
        temp = Array.from(document.querySelectorAll(
            'script:not([src]):not([' + magic + '])'
        ));
        if (document.currentScript && !document.currentScript.hasAttribute(magic)) {
            temp.unshift(document.currentScript);
        }
        if (temp.length === 0) {
            return true;
        }
        for (var e of temp) {
            e.setAttribute(magic, '');
            if (e.textContent && e.textContent.includes(testScript)) {
                script = e;
                break;
            }
        }
        //
        if (script === undefined) {
            return true;
        }
        var prev = script.previousSibling;
        temp = prev;
        while (temp = temp.previousSibling) {
            if (temp.nodeType === Node.COMMENT_NODE && testComment.test(temp.data)) {
                prev.style.setProperty('display', 'none', 'important');
                return false;
            }
        }
    };
    //
    Object.defineProperty(window, "trev", {
        set: function () { },
        get: function () {
            var r;
            var i = 0;
            do {
                try {
                    r = getter();
                } catch (err) { }
            } while (i++ , !r && i < 100);
            return null;
        }
    });
    addEventListener('load', function () {
        void trev;
    });
    //
    var isInBackground = false;
    var reStart = /^\/[a-z_]+\.cms/;
    var reEnd = /^ \d{5,} \d{1,2} $/;
    var adsHidder = function () {
        if (isInBackground || !document.body) {
            return;
        }
        var iterator = document.createTreeWalker(document.body, NodeFilter.SHOW_COMMENT);
        var comment;
        while (comment = iterator.nextNode()) {
            if (reStart.test(comment.data)) {
                var toHide = [];
                var prev = comment;
                while (prev = prev.previousSibling) {
                    if (prev.nodeType === Node.COMMENT_NODE && reEnd.test(prev.data)) {
                        if (toHide.length < 15) {
                            for (var e of toHide) {
                                try {
                                    e.style.setProperty('display', 'none', 'important');
                                } catch (err) { }
                            }
                        }
                        break;
                    }
                    toHide.push(prev);
                }
            }
        }
    };
    addEventListener('focus', function () {
        isInBackground = false;
    });
    addEventListener('blur', function () {
        isInBackground = true;
    });
    setInterval(adsHidder, 1000);
})();

// Patch document.createElement and prevent created script from receiving network error event, 1 required argument
// url - The URL matcher of the script
//
/// nano-hijack-script-create.js
(() => {
    var _createElement = document.createElement;
    var needle = '{{1}}';
    if (needle === '' || needle === '{{1}}') {
        needle = '.?';
    } else if (needle.length > 2 && needle.startsWith('/') && needle.endsWith('/')) {
        needle = needle.slice(1, -1);
    } else {
        needle = needle.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }
    needle = new RegExp(needle);
    document.createElement = function (name) {
        var elem = _createElement.apply(this, arguments);
        if (name === 'script') {
            elem.addEventListener('error', function (e) {
                if (needle.test(elem.src)) {
                    e.preventDefault();
                    e.stopPropagation();
                    var ev = new Event('load');
                    elem.dispatchEvent(ev);
                }
            });
        }
        return elem;
    };
})();

// Insert an invisible elements onto the page, can be used to dodge baits, 1 required argument
// identifier - An identifier, either an id or a class name.Like '#id' or '.class'
//
/// nano-make-bait-element.js
(() => {
    var identifier = '{{1}}';
    var element = document.createElement('div');
    if (identifier.charAt(0) === '#') {
        element.id = identifier.substring(1);
    } else if (identifier.charAt(0) === '.') {
        element.className = identifier.substring(1);
    } else {
        return;
    }
    element.style.display = 'none';
    document.documentElement.appendChild(element);
})();

// Grant fake notification permission
//
/// nano-grant-fake-notification.js
(() => {
    Notification = function () { };
    Notification.permission = 'default';
    Notification.requestPermission = function (callback) {
        Notification.permission = 'granted';
        if (callback) {
            setTimeout(callback, 0, 'granted');
        }
        return Promise.resolve('granted');
    };
})();

// Prevent inline scripts with specific IDs from executing, 1 required argument
// needle - The ID matcher, can be a plain string (exact match) or a regular expression
//
/// nano-abort-inline-scripts-by-id.js
(() => {
    let needle = '{{1}}';
    if (needle === '' || needle === '{{1}}') {
        return;
    } else if (needle.startsWith('/') && needle.endsWith('/')) {
        needle = needle.slice(1, -1);
    } else {
        needle = '^' + needle.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + '$';
    }
    needle = new RegExp(needle);
    //
    const observer = new MutationObserver((mutations) => {
        for (const mutation of mutations) {
            for (const node of mutation.addedNodes) {
                if (node.tagName === 'SCRIPT' && needle.test(node.id)) {
                    node.textContent = '';
                    node.remove();
                }
            }
        }
    });
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        return; // Too late
    } else {
        observer.observe(document, {
            childList: true,
            subtree: true,
        });
        addEventListener('DOMContentLoaded', () => {
            observer.disconnect();
        });
    }
})();

// ----------------------------------------------------------------------------------------------------------------- //

// Deprecated resources, these may be removed in the future

// Remove elements when the document gets ready, 1 required argument
// selector - The selector for elements to remove, must be a plain CSS selector, pseudo-selectors are not supported
//
/// nano-remove-elements-onready.js
(() => {
    var selector = '{{1}}';
    if (selector === '' || selector === '{{1}}') {
        return;
    }
    var remove = function () {
        var elements = document.querySelectorAll(selector);
        for (var element of elements) {
            element.remove();
        }
    };
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        remove();
    } else {
        addEventListener('DOMContentLoaded', remove);
    }
})();

// ----------------------------------------------------------------------------------------------------------------- //

// Privileged resources, these are only available to Nano Adblocker's trusted filter lists

// Click elements when the document gets ready, 1 required argument
// selector - The selector for elements to remove, must be a plain CSS selector, pseudo-selectors are not supported
//
/// nanop-click-elements-onready.js
(() => {
    var guard = '{{nano}}';
    if (guard === '{{nano}}') {
        return;
    }
    var selector = '{{1}}';
    if (selector === '' || selector === '{{1}}') {
        return;
    }
    var click = function () {
        var elements = document.querySelectorAll(selector);
        for (var element of elements) {
            element.click();
        }
    };
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        click();
    } else {
        addEventListener('DOMContentLoaded', click);
    }
})();

// Click elements when the document gets loaded, 1 required argument
// selector - The selector for elements to remove, must be a plain CSS selector, pseudo-selectors are not supported
//
/// nanop-click-elements-onload.js
(() => {
    var guard = '{{nano}}';
    if (guard === '{{nano}}') {
        return;
    }
    var selector = '{{1}}';
    if (selector === '' || selector === '{{1}}') {
        return;
    }
    var click = function () {
        var elements = document.querySelectorAll(selector);
        for (var element of elements) {
            element.click();
        }
    };
    if (document.readyState === 'complete') {
        click();
    } else {
        addEventListener('load', click);
    }
})();

// Set a cookie, 1 required arguments, 3 optional arguments
// data   - The key = value pair
// path   - Optional, the path, default to current path
// domain - Optional, the domain, default to current domain
// secure - true or false; optional, default to false
// del    - true or false, set to true to delete the cookie instead; optional, default to false
//
/// nanop-easy-set-cookie.js
(() => {
    var guard = '{{nano}}';
    if (guard === '{{nano}}') {
        return;
    }
    var data = '{{1}}';
    var path = '{{2}}';
    var domain = '{{3}}';
    var secure = '{{4}}';
    var del = '{{5}}';
    if (data.indexOf('=') === -1) {
        return;
    }
    if (del === 'true') {
        data += ';max-age=-100';
    } else {
        data += ';max-age=2592000'; // 30 days
    }
    if (path !== '' && path !== '{{2}}') {
        data += ';path=' + path;
    }
    if (domain !== '' && domain !== '{{3}}') {
        data += ';domain=' + domain;
    }
    if (secure === 'true') {
        data += ';secure';
    }
    document.cookie = data;
})();

// Set a cookie the hard way, 1 required argument
// data - The cookie data to set
//
/// nanop-set-cookie.js
(() => {
    var guard = '{{nano}}';
    if (guard === '{{nano}}') {
        return;
    }
    var data = '{{1}}';
    if (data.indexOf('=') === -1) {
        return;
    }
    document.cookie = data;
})();

// Redirect to a URL in GET parameter
// key - The parameter key
//
/// nanop-get-redirect.js
(() => {
    var guard = '{{nano}}';
    if (guard === '{{nano}}') {
        return;
    }
    var data = '{{1}}';
    if (data === '' || data === '{{1}}') {
        return;
    }
    var url = new URL(location.href);
    var param = url.searchParams.get(data);
    if (typeof param !== 'string' || !/^https?:\/\//.test(param)) {
        return;
    }
    location.href = param;
})();

// ----------------------------------------------------------------------------------------------------------------- //

metrika-yandex-tag application/javascript
(function(source, args){
function metrikaYandexTag(source) {
    var asyncCallbackFromOptions = function asyncCallbackFromOptions(param) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var callback = options.callback;
      var ctx = options.ctx;

      if (typeof callback === 'function') {
        callback = ctx !== undefined ? callback.bind(ctx) : callback;
        setTimeout(function () {
          return callback();
        });
      }
    };

    var init = noopFunc;
    /**
     * https://yandex.ru/support/metrica/objects/addfileextension.html
     */

    var addFileExtension = noopFunc;
    /**
     * https://yandex.ru/support/metrica/objects/extlink.html
     */

    var extLink = asyncCallbackFromOptions;
    /**
     * https://yandex.ru/support/metrica/objects/file.html
     */

    var file = asyncCallbackFromOptions;
    /**
     * https://yandex.ru/support/metrica/objects/get-client-id.html
     * @param {Function} cb
     */

    var getClientID = function getClientID(cb) {
      setTimeout(cb(null));
    };
    /**
     * https://yandex.ru/support/metrica/objects/hit.html
     */


    var hitFunc = asyncCallbackFromOptions;
    /**
     * https://yandex.ru/support/metrica/objects/notbounce.html
     */

    var notBounce = asyncCallbackFromOptions;
    /**
     * https://yandex.ru/support/metrica/objects/params-method.html
     */

    var params = noopFunc;
    /**
     * https://yandex.ru/support/metrica/objects/reachgoal.html
     * @param {string} target
     * @param {Object} params
     * @param {Function} callback
     * @param {any} ctx
     */

    var reachGoal = function reachGoal(target, params, callback, ctx) {
      asyncCallbackFromOptions(null, {
        callback: callback,
        ctx: ctx
      });
    };
    /**
     * https://yandex.ru/support/metrica/objects/set-user-id.html
     */


    var setUserID = noopFunc;
    /**
     * https://yandex.ru/support/metrica/objects/user-params.html
     */

    var userParams = noopFunc;
    var api = {
      init: init,
      addFileExtension: addFileExtension,
      extLink: extLink,
      file: file,
      getClientID: getClientID,
      hit: hitFunc,
      notBounce: notBounce,
      params: params,
      reachGoal: reachGoal,
      setUserID: setUserID,
      userParams: userParams
    };

    function ym(id, funcName) {
      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }

      return api[funcName] && api[funcName].apply(api, args);
    }

    window.ym = ym;
    hit(source);
  }
function hit(source, message) {
    if (source.verbose !== true) {
      return;
    }

    try {
      var log = console.log.bind(console);
      var trace = console.trace.bind(console);
      var prefix = source.ruleText || '';

      if (source.domainName) {
        var AG_SCRIPTLET_MARKER = '#%#//';
        var UBO_SCRIPTLET_MARKER = '##+js';
        var ruleStartIndex;

        if (source.ruleText.indexOf(AG_SCRIPTLET_MARKER) > -1) {
          ruleStartIndex = source.ruleText.indexOf(AG_SCRIPTLET_MARKER);
        } else if (source.ruleText.indexOf(UBO_SCRIPTLET_MARKER) > -1) {
          ruleStartIndex = source.ruleText.indexOf(UBO_SCRIPTLET_MARKER);
        } // delete all domains from ruleText and leave just rule part


        var rulePart = source.ruleText.slice(ruleStartIndex); // prepare applied scriptlet rule for specific domain

        prefix = "".concat(source.domainName).concat(rulePart);
      } // Used to check if scriptlet uses 'hit' function for logging


      var LOG_MARKER = 'log: ';

      if (message) {
        if (message.indexOf(LOG_MARKER) === -1) {
          log("".concat(prefix, " message:\n").concat(message));
        } else {
          log(message.slice(LOG_MARKER.length));
        }
      }

      log("".concat(prefix, " trace start"));

      if (trace) {
        trace();
      }

      log("".concat(prefix, " trace end"));
    } catch (e) {// try catch for Edge 15
      // In according to this issue https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14495220/
      // console.log throws an error
    } // This is necessary for unit-tests only!


    if (typeof window.__debug === 'function') {
      window.__debug(source);
    }
  }
function noopFunc() {};
        const updatedArgs = args ? [].concat(source).concat(args) : [source];
        metrikaYandexTag.apply(this, updatedArgs);
    
})({"name":"metrika-yandex-tag","args":[]}, []);

metrika-yandex-watch application/javascript
(function(source, args){
function metrikaYandexWatch(source) {
    var cbName = 'yandex_metrika_callbacks';
    /**
     * Gets callback and its context from options and call it in async way
     * @param {Object} options Yandex Metrika API options
     */

    var asyncCallbackFromOptions = function asyncCallbackFromOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = options.callback;
      var ctx = options.ctx;

      if (typeof callback === 'function') {
        callback = ctx !== undefined ? callback.bind(ctx) : callback;
        setTimeout(function () {
          return callback();
        });
      }
    };

    function Metrika() {} // constructor
    // Methods without options


    Metrika.prototype.addFileExtension = noopFunc;
    Metrika.prototype.getClientID = noopFunc;
    Metrika.prototype.setUserID = noopFunc;
    Metrika.prototype.userParams = noopFunc; // Methods with options
    // The order of arguments should be kept in according to API

    Metrika.prototype.extLink = function (url, options) {
      asyncCallbackFromOptions(options);
    };

    Metrika.prototype.file = function (url, options) {
      asyncCallbackFromOptions(options);
    };

    Metrika.prototype.hit = function (url, options) {
      asyncCallbackFromOptions(options);
    };

    Metrika.prototype.reachGoal = function (target, params, cb, ctx) {
      asyncCallbackFromOptions({
        callback: cb,
        ctx: ctx
      });
    };

    Metrika.prototype.notBounce = asyncCallbackFromOptions;

    if (window.Ya) {
      window.Ya.Metrika = Metrika;
    } else {
      window.Ya = {
        Metrika: Metrika
      };
    }

    if (window[cbName] && Array.isArray(window[cbName])) {
      window[cbName].forEach(function (func) {
        if (typeof func === 'function') {
          func();
        }
      });
    }

    hit(source);
  }
function hit(source, message) {
    if (source.verbose !== true) {
      return;
    }

    try {
      var log = console.log.bind(console);
      var trace = console.trace.bind(console);
      var prefix = source.ruleText || '';

      if (source.domainName) {
        var AG_SCRIPTLET_MARKER = '#%#//';
        var UBO_SCRIPTLET_MARKER = '##+js';
        var ruleStartIndex;

        if (source.ruleText.indexOf(AG_SCRIPTLET_MARKER) > -1) {
          ruleStartIndex = source.ruleText.indexOf(AG_SCRIPTLET_MARKER);
        } else if (source.ruleText.indexOf(UBO_SCRIPTLET_MARKER) > -1) {
          ruleStartIndex = source.ruleText.indexOf(UBO_SCRIPTLET_MARKER);
        } // delete all domains from ruleText and leave just rule part


        var rulePart = source.ruleText.slice(ruleStartIndex); // prepare applied scriptlet rule for specific domain

        prefix = "".concat(source.domainName).concat(rulePart);
      } // Used to check if scriptlet uses 'hit' function for logging


      var LOG_MARKER = 'log: ';

      if (message) {
        if (message.indexOf(LOG_MARKER) === -1) {
          log("".concat(prefix, " message:\n").concat(message));
        } else {
          log(message.slice(LOG_MARKER.length));
        }
      }

      log("".concat(prefix, " trace start"));

      if (trace) {
        trace();
      }

      log("".concat(prefix, " trace end"));
    } catch (e) {// try catch for Edge 15
      // In according to this issue https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14495220/
      // console.log throws an error
    } // This is necessary for unit-tests only!


    if (typeof window.__debug === 'function') {
      window.__debug(source);
    }
  }
function noopFunc() {};
        const updatedArgs = args ? [].concat(source).concat(args) : [source];
        metrikaYandexWatch.apply(this, updatedArgs);
    
})({"name":"metrika-yandex-watch","args":[]}, []);


// Font-display masses
// Try to optimize loading fonts
(() => {
  try {
    var e = document.createElement("style");
    e.textContent = "@font-face { font-display: swap; }";
    document.documentElement.appendChild(e);
    var isFontDisplaySupported = e.sheet.cssRules[0].cssText.indexOf("font-display") != -1;
    e.remove();
  } catch (e) {
    // Do something with an error if you want
  }
  if (isFontDisplaySupported === false && "fonts" in document) {
    document.fonts.load("1em Open Sans Regular");
    document.fonts.ready.then(function(fontFaceSet) {
      document.documentElement.className += " fonts-loaded";
    });
  }
  else {
    // Maybe figure out your own strategy, but this might be sensible:
    document.documentElement.className += " fonts-loaded";
  }
})();

// JS __UniversalDelayer_Modul
!function delayer() {
    setTimeout(function init() {
        function flat(arr) {
            const flattened = [];
            return arr.forEach(arr => {
                Array.isArray(arr) ? flattened.push(...flat(arr)) : flattened.push(arr);
            }), flattened;
        }
        function isInArray(uri, arr) {
            return arr.indexOf(uri) > -1;
        }
        function notInArray(uri, arr) {
            return arr.indexOf(uri) >= 0;
        }
        function fetch(uri) {
            return 0 != window.location.hostname.indexOf(uri);
        }
        function preloadScript() {
            var node;
            for (node = document.createElement("link"),
                 s = scripts.length - 1; s >= 0; --s) for (scripts[s].parentNode.removeChild(scripts[s]); -1 !== scripts[s].src; ) {
                node.href = scripts[s].src,
                    node.as = "script",
                    node.rel = "prelink", head.appendChild(node);
                break;
            }
        }
        var e, a, t, s, count = 0;
        const doc = document, win = window, head = (location, doc.getElementsByTagName("head")[0]),
              author = GM_info.script.author, scriptName = GM_info.script.name, scripts = doc.scripts,
              acceptLngs = [ "de", "en", "es", "fr", "it", "pt" ],
              u = {
                  st1 : {
                      de : "ist schlecht und wurde verz\u00f6gert (nicht wirklich blockiert), um das Laden der Seite zu optimieren.",
                      en : "is bad & was delayed (not really block) to optimize page loading.",
                      es : "es malo y se retras\u00f3 (en realidad no bloque\u00f3) para optimizar la carga de la p\u00e1gina.",
                      fr : "est mauvais et a \u00e9t\u00e9 retard\u00e9 (pas vraiment bloqu\u00e9) pour optimiser le chargement de la page.",
                      it : "\u00e8 male ed \u00e8 stato ritardato (non proprio bloccato) per ottimizzare il caricamento della pagina.",
                      pt : "est\u00e1 ruim e foi atrasado (n\u00e3o \u00e9 realmente bloqueado) para otimizar o carregamento da p\u00e1gina."
                  },
                  st2 : {
                      de : "Bitte sperren Sie mich (falls noch nicht geschehen) in Ihrem Werbeblocker.",
                      en : "Please block me (if you have not already done so) in your ad blocker.",
                      es : "Bloqu\u00e9eme (si a\u00fan no lo ha hecho) en su bloqueador de anuncios.",
                      fr : "Bloquez-moi s'il vous pla\u00eet (si ce n'est pas d\u00e9j\u00e0 fait) dans votre bloqueur de publicit\u00e9.",
                      it : "Per favore bloccami (se non l'hai gi\u00e0 fatto) nel tuo blocco degli annunci.",
                      pt : "Bloqueie-me (se ainda n\u00e3o o fez) no seu bloqueador de an\u00fancios."
                  },
                  st3 : {
                      de : "ist nicht wirklich notwendig und wurde verz\u00f6gert, um das Laden der Seite zu optimieren.",
                      en : "is not really necessary & was delayed to optimize page loading.",
                      es : "no es realmente necesario y se retras\u00f3 para optimizar la carga de la p\u00e1gina.",
                      fr : "n'est pas vraiment n\u00e9cessaire et a \u00e9t\u00e9 retard\u00e9 pour optimiser le chargement de la page.",
                      it : "non \u00e8 davvero necessario ed \u00e8 stato ritardato per ottimizzare il caricamento della pagina.",
                      pt : "n\u00e3o \u00e9 realmente necess\u00e1rio e foi adiado para otimizar o carregamento da p\u00e1gina."
                  },
                  st4 : {
                      de : "Sie k\u00f6nnen mich ohne Risiko in Ihren Werbeblocker sperren.",
                      en : "You can block me without risk (if you would) into your ad-blocker.",
                      es : "Puede bloquearme sin riesgo (si lo har\u00eda) en su bloqueador de anuncios.",
                      fr : "Vous pouvez me bloquer sans risque (si vous le souhaitez) dans votre bloqueur de publicit\u00e9.",
                      it : "Puoi bloccarmi senza rischi (se lo desideri) nel tuo blocco degli annunci.",
                      pt : "Voc\u00ea pode me bloquear sem risco (se quiser) em seu bloqueador de an\u00fancios."
                  },
                  st5 : {
                      de : "ist gut (oder notwendig) und wurde nur verz\u00f6gert, um das Laden der Seite zu optimieren.",
                      en : "is good (or necessary) & was only delayed to optimize page loading.",
                      es : "es bueno (o necesario) y solo se retras\u00f3 para optimizar la carga de la p\u00e1gina.",
                      fr : "est bon (ou n\u00e9cessaire) et n\u2019a \u00e9t\u00e9 que retard\u00e9 pour optimiser le chargement des pages.",
                      it : "\u00e8 buono (o necessario) ed \u00e8 stato ritardato solo per ottimizzare il caricamento della pagina.",
                      pt : "\u00e9 bom (ou necess\u00e1rio) e s\u00f3 foi adiado para otimizar o carregamento da p\u00e1gina."
                  },
                  st6 : {
                      de : "Kann einige Operationen unterbrechen, wenn sie blockiert sind.",
                      en : "Can break some operations if blocked.",
                      es : "Puede interrumpir algunas operaciones si est\u00e1 bloqueado.",
                      fr : "Peut interrompre certaines op\u00e9rations s'il est bloqu\u00e9.",
                      it : "Pu\u00f2 interrompere alcune operazioni se bloccato.",
                      pt : "Pode interromper algumas opera\u00e7\u00f5es se bloqueado."
                  },
                  st7 : {
                      de : "wurde verz\u00f6gert, um das Laden der Seite zu optimieren.",
                      en : "was delayed to optimize page loading.",
                      es : "se retras\u00f3 para optimizar la carga de la p\u00e1gina.",
                      fr : "a \u00e9t\u00e9 retard\u00e9 pour optimiser le chargement de la page.",
                      it : "\u00e8 stato ritardato per ottimizzare il caricamento della pagina.",
                      pt : "foi adiado para otimizar o carregamento da p\u00e1gina."
                  },
                  st8 : {
                      de : "Blockiere mich nicht, sonst k\u00f6nnen einige Operationen (oder einige Sites) unterbrochen werden.",
                      en : "Do not block me, can break some operations (or some sites) otherwise.",
                      es : "No me bloquee, puede romper algunas operaciones (o algunos sitios) de lo contrario.",
                      fr : "Ne me bloquez pas, peut casser certaines op\u00e9rations (ou certains sites) autrement.",
                      it : "Non bloccarmi, altrimenti potresti interrompere alcune operazioni (o alcuni siti).",
                      pt : "N\u00e3o me bloqueie, pois pode interromper algumas opera\u00e7\u00f5es (ou alguns sites)."
                  },
                  st9 : {
                      de : ", zu beachten und wurde verz\u00f6gert, um das Laden der Seite zu optimieren.",
                      en : ", to pay attention & has been delayed to optimize the loading of the page.",
                      es : ", para prestar atenci\u00f3n y se ha retrasado para optimizar la carga de la p\u00e1gina.",
                      fr : ", \u00e0 pr\u00eater attention et a \u00e9t\u00e9 retard\u00e9 pour optimiser le chargement de la page.",
                      it : ", per prestare attenzione ed \u00e8 stato ritardato per ottimizzare il caricamento della pagina.",
                      pt : ", preste aten\u00e7\u00e3o e foi adiado para otimizar o carregamento da p\u00e1gina."
                  },
                  st10 : {
                      de : "Untersuche mich (oder versuche mich sorgf\u00e4ltig zu blockieren).",
                      en : "Inspect me (or try to block me carefully).",
                      es : "Inspeccionarme (o tratar de bloquearme con cuidado).",
                      fr : "Inspectez-moi (ou essayez de me bloquer avec pr\u00e9caution).",
                      it : "Ispezionami (o prova a bloccarmi attentamente).",
                      pt : "Inspecione-me (ou tente me bloquear com cuidado)."
                  },
                  st11 : {
                      de : "Wenn ich keine URL habe, dann bin ich sicher ein Inline-Skript.",
                      en : "If I do not have a URL, then that I am certainly an inline-script.",
                      es : "Si no tengo una URL, entonces ciertamente soy un script en l\u00ednea.",
                      fr : "Si je n'ai pas d'URL, c'est que je suis certainement un script en ligne.",
                      it : "Se non ho un URL, allora sono sicuramente uno script incorporato.",
                      pt : "Se eu n\u00e3o tenho um URL, certamente sou um script embutido."
                  },
                  st12 : {
                      de : "Ich bin ein Drehbuch. (::Warnung::, sei vorsichtig, wenn du mich blockieren willst).",
                      en : "I'm a script. (::warning::, act with caution if you want to block me).",
                      es : "Soy un guion (::advertencia::, act\u00faa con precauci\u00f3n si quieres bloquearme).",
                      fr : "Je suis un script. (::avertissement::, agissez avec prudence si vous voulez me bloquer).",
                      it : "Sono una sceneggiatura. (::attenzione::, agisci con cautela se vuoi bloccarmi).",
                      pt : "Eu sou um roteiro. (::aviso::, tome cuidado se quiser me bloquear)."
                  },
                  st13 : {
                      de : "| Liste zur Verwendung Ihres Werbeblockers |",
                      en : "| List to use in your Ad Blocker |",
                      es : "| Lista para usar su bloqueador de anuncios |",
                      fr : "| Liste \u00e0 utiliser dans votre bloqueur de publicit\u00e9 |",
                      it : "| Elenco per utilizzare Ad Blocker |",
                      pt : "| Lista para usar seu Ad Blocker |"
                  },
                  st14 : {
                      de : "(klick mich an)",
                      en : "(click me)",
                      es : "(haz clic en m\u00ed)",
                      fr : "(cliquez moi)",
                      it : "(cliccami)",
                      pt : "(clique em mim)"
                  },
                  st15 : {
                      de : `Generiert mit "${scriptName}" von ${author}`,
                      en : `Generated with "${scriptName}" by ${author}`,
                      es : `Generado con "${scriptName}" por ${author}`,
                      fr : `G\u00e9n\u00e9r\u00e9e avec "${scriptName}" par ${author}`,
                      it : `Generato con "${scriptName}" da ${author}`,
                      pt : `Gerado com "${scriptName}" por ${author}`
                  },
                  st16 : {
                      de : "verhindert den ordnungsgem\u00e4\u00dfen Betrieb",
                      en : "prevents proper operation",
                      es : "impide el funcionamiento correcto",
                      fr : "emp\u00eache le bon fonctionnement",
                      it : "impedisce il corretto funzionamento",
                      pt : "impede opera\u00e7\u00e3o adequada"
                  },
                  st17 : {
                      de : "(Fehler verursachen, also blockieren).",
                      en : "(cause bugs, so to block).",
                      es : "(causar errores, por lo que bloquear).",
                      fr : "(cause des bogues/bugs, donc \u00e0 bloquer).",
                      it : "(causa bug, quindi per bloccare).",
                      pt : "(causar erros, de modo a bloquear)."
                  },
                  st18 : {
                      de : "autorisieren",
                      en : "to authorize",
                      es : "autorizar",
                      fr : "\u00e0 autoriser",
                      it : "autorizzare",
                      pt : "para autorizar"
                  },
                  st19 : {
                      de : "zu blockieren",
                      en : "to block",
                      es : "para bloquear",
                      fr : "\u00e0 bloquer",
                      it : "per bloccare",
                      pt : "bloquear"
                  },
                  st20 : {
                      de : "aufgrund einer Fehlfunktion",
                      en : "due to malfunction",
                      es : "debido a un mal funcionamiento",
                      fr : "pour cause de dysfonctionnement",
                      it : "a causa di un malfunzionamento",
                      pt : "devido a mau funcionamento"
                  }
              },
              nav = win.navigator, m = [ nav.language + "" || nav.browserLanguage + "" || nav.userLanguage + "", nav.languages + "", "en" ].filter(Boolean),
              g = e => e.split("-")[0],
              z = m.find(e => (a => {
                  let t = g(e);
                  return acceptLngs.includes(t);
              })()),
              f = g(z), translate = e => {
                  let a = u[e];
                  return a && (a[z] || a[f]) || e;
              };
        var done, commonStyle = "padding:.25em;line-height:1.5em;font-weight:bold;font-size:1.2em;",
            options = {
                pre: "%c%s",
                grn: commonStyle + "color:#99C794;",
                blu: commonStyle + "color:#374852;",
                ylw: commonStyle + "color:#FAC863;",
                red: commonStyle + "color:#b35d62;",
                org: commonStyle + "color:#F99157;",
                prp: commonStyle + "color:#C594C5;",
                brw: commonStyle + "color:#AB7967;",
                ttl: commonStyle + "color:rgba(0,0,0,.6);font-variant:small-caps;font-size:1.7em!important"
            },
            j = [], k = [], q = [], A = [], I = [], L = [], x = [], S = [], E = [],
            protocolsRequired = /^((ht{2}ps?):\/\/)/,
            regexURL_ThatCauseBUGS = [
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?filmgratuit\.(net)\/templates\/default\/js\/(jquery\-1\.10\.2)\.js/
            ],
            regexURL_thatCanBeBLOCK = [
                /(in(tegrations\/breadcrumbs|voke))\.js/,
                /(protraf{2}ic|clicksagent|greatdemosite|evrotraf{2}|fpctraf{2}ic2|traf{2}ic(holder|roup|shop)|g-traf{2}ic|refer\.c{2}bil{2})\.(com|net)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?youtube\.(.{2,})\/embed\/(.*)?ps=software/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?((gk)?tor{2}ent9?|vidoza)\.(.{2,})\/(js\/)?sw(\.min)?\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?((o(pen)?|et)load)\.(.{2,})\/cdn-cgi\/ap{2}s\/head\/([a-zA-Z0-9]{3,}).js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?uptostream\.(.{2,})\/as{2}ets\/js\/u2f\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(ads(.*)|ftp)\.uptobox\.(.{2,})\/(.*)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?streamango\.(.{2,})\/(.*\/)?(popunder(.*))\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?rapidvideo\.(.{2,})\/genads\.php/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(upvid|o((pen)?load|jet)|rapidvideo|streamango|vidoza)\.(.*)\/((.*)\/)?(custom\-)?pop\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(upvid|o((pen)?load|jet)|rapidvideo|vidoza)\.(.*)(\/(.*))?\/((go{2}gle)?ad(s|vert([0-9]+)?)?)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?o3{3}o\.(.{2,})\/vast\-im\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?exosrv\.(.{2,})\/(((popunder(.*))\.js|js\.php))/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?yandex\.(.{2,})\/metrika/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(adsco|newsatads)\.(.{2,})\/(.*)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?amazonaws\.(.{2,})\/adsurge\-as{2}ets\/landers\/dark_player\/(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?vd\.7vid\.(.{2,})\/(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?easylist\.(.{2,})\/(ados|popunder(.*))\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?gstatic\.(.{2,})\/(.*)\/sender\/(.*)\/cast_sender\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?hostingcloud\.(.{2,})\/u83k\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?static\.ad{2}toany\.(.{2,})\/(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(d[eo]lo(pl|h)en)\.(.{2,})\/apu\.php/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?subscribers\.click\/fp{2}\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(doubleclick|firstimpres{2}ion|highwebmedia|(((sentry\-)|zen)cdn)|rubiconproject|(static\.ads\-twit{2}er)|t(agbucket|hemoneytizer))\.(.{2,})(\/(.*))?(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?fastcounter\.(.{2,})\/fcount\.php/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?animedigitalnetwork\.(.{2,})\/media\/analytics\/event\.min\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?mou{2}hrprxixwrw\.(.{2,})\/prqi\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(h(istats|otjar)|pubdirecte|s(ekindo|tremanp)|tharbadir)\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?static\.x{2}\.fbcdn\.(.{2,})\/rsrc\.php\/(.*)\/GMj0{2}YJBc2{2}\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(6zw2rcfd|hcg82f2b|dnzwjlbknhe|s20dh7e9dh|tu42het2{2}n)\.(com)\/(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?pixel\-static\.spotify\.(.{2,})\/sync\.min\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?s3\.amazonaws\.(.{2,})\/ki\.js\/51746\/b0R\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?vast\.adsafeprotected\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?jsc\.mgid\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(blaghfpd|youborafds01|x{2}c{2}dshj|qualaro{2}|optimizesrv)\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(4f2sm1y1s{2}|utip|nutaku|a(d(cash|nium|venturefe{2}ds|s(ervme|rv4k|ke{2}per|pyglas{2}|ter{2}a|up{2}ly))|sdad)|media-dl)\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(cjlicka(du|ine)|d(oublepimp|nomads)|exoclick|fpctraf{2}ic|gadsbe{2}|hil{2}topads|inxyads|juicyads|(p(ushnest|lugrush)|op((my)?ads|cash)))\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(propel{2}erads|r(ivertraf{2}ic|oyalads|unative)|squren|t(raf{2}ic(force|h(aus|unt)|s(hop|tars))|ubecorporate))\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)\.(cafe)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?ie8eamus\.(.{2,})\/sfp\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?signup\.favgame\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?voir\.dpstream\.(site)\/pop\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?captched\.(com)\/jws\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?uhit\.(eu)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?al{2}osponsor\.(.{2,})\/cgi-bin/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?fe{2}ds\.fe{2}dburner\.(.{2,})\/(.*)&label=listeners/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?pixel\.bsmartdata\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?stats\.(([a-z]+).doubleclick|wp)\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(infolinks|pubdirecte|sendpulse)\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?cdns\-files\.dzcdn\.(.{2,})\/(.*)\/(route\-naboo\-ads\.(.*))\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)\.(com)\/ntfc\.php/
            ],
            Z = [
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?adtag\.c{2}/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?stats\.wp\.(com)\/(.*).js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?ad{2}this(edge)?\.(.{2,})(\/(.*))?(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?vidoza\.(.{2,})\/(js\/)?jquery(\.min)?\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?streamango\.(.{2,})\/(.*\/)?((script\.packed)|license(\.adbl)?)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?cdn\.jsdelivr\.(.{2,})\/npm\/yandex\-metrica\-watch\/tag.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?voirfilms\.(.{2,})\/((.*)\/)?(b{2}codes([0-9]+)?|main|plus|voirfilms?)(\.min)?\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?e\-cdns\-files\.dzcdn\.net\/cache\/js\/ap{2}-web\.(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?con{2}ect\.(mail|ok)\.ru/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)\.facebo{2}k\.(.{2,})\/(.*)\/\?fields=engagement/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?vk\.(.{2,})\/share\.php\?act=count/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?yastatic\.(.{2,})\/share(.*)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?toro\-tags\.(.{2,})\/_?tags\/(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?player\.hq{2}\.(.{2,})\/player\/ch\.php/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?hq{2}\.(.{2,})\/js\/(.*\/)?(videojs\-social)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?french\-stream\.(in)\/templates\/(.*)\/js\/share\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(sharethis|(widgets\.amung))\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?filmgratuit\.(net)\/templates\/default\/js\/libs\.js\?/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?yt?img\.(.{2,})(\/(.*))?\/(yap\.js|(player\-(.*))\/endscre{2}n\.swf)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?youtube\.(.{2,})\/yts\/jsbin\/(.*\/)?(miniplayer|endscreen|(annotations\_module)|(web\-animations\-next\-lite))(\.min)?\.js/
            ],
            C = [
                /(p2p\-media\-loader\-(hlsjs|core)(\.min)?)\.js/g,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?youtube\.(.{2,})\/yts\/jsbin\/(.*\/)?(((.*)tampering)|s(pf|cheduler)|(webcomponents(.*))|(custom\-elements\-es5\-adapter)|network)(\.min)?\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(mystream|uqload)\.(.{2,})(\/(.*))\/?pop\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?uptostream\.(.{2,})\/dist\/uts(Init|Plugin)\.min\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?voirfilms\.(.{2,})\/((.*)\/)?(jquery(ui)?)(\.min)?\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?go{2}gle\.(.{2,})\/js\/bg\/(.*)\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(g(static|o{2}gle)|recaptcha)\.(.{2,})\/recaptcha/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?vkc(ache|dnservice)\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(hls|fluid)play(er)?\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?hq{2}\.(.{2,})\/js(\/.*)?\/(ads|script\-(.*))\.js(\?.*)?/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?french\-vid\.(ga)\/as{2}et\/default\/player\/base\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?((core1|easy)player)\.(c(c|om))/
            ],
            P = [
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?go{2}gle\-analytics.(.{2,})\/(analytics\.js)?/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?streamango\.(.{2,})\/go{2}glead\.js/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?((pagead([0-9]+)?)|tpc)\.go{2}glesyndication\.(.{2,})(\/safeframe)?/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?((adservice\.go{2}gle)|consensu|go{2}gletag(manager|services))\.(.{2,})/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(s0\.)?2mdn\.(.{2,})\/instream\/video\/client\.js/
            ],
            G = [
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(?=.*\d)(?=.*[A-Za-z])[A-Za-z0-9]{5,}\.(com)\/(?=.*\d)(?=.*[A-Za-z])[A-Za-z0-9]{2,}\/(?=.*\d)(?=.*[A-Za-z])[A-Za-z0-9]{2,}\/(?=.*\d)(?=.*[A-Za-z])[A-Za-z0-9]{2,}\/[a-zA-Z0-9]{5,}\.js/g, /ht{2}ps?:\/\/(([vw]{2,})?([a-z0-9]+)?\.)?[A-Za-z0-9]{9,}\.cloudfront\.(.{2,})\/(.*)\.js/, /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)\.(pro|vip)/, /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?pub\.(network)/, /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)?(((amazon\-adsystem)|geoip\-db)|(static\.apester))\.(com)/, /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(fastly\-insights)\.(com)/,
                /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(open\.scdn)\.(.{2,})\/static\/js\/gtag\.js/g
            ],
            U = [ /\/(analytics?|beacon)\.js/g ],
            N = [ /(\w{2})-(\w{2})/, /ht{2}ps?:\/\/(([vw]{2,})?([a-z]+)?([0-9]+)?\.)?(.*)/ ];
        !function dispatching() {
            for (
                s = scripts.length - 1; s >= 0; --s) {
                for (t = scripts[s].src, S.push(t), flat(S),
                     a = 0; a < regexURL_thatCanBeBLOCK.length; a++) for (
                    e = new RegExp(regexURL_thatCanBeBLOCK[a]); e.test(t); ) {
                    j.push(t), E.push(t);
                    break;
                }
                for (a = 0; a < Z.length; a++) for (
                    e = new RegExp(Z[a]); e.test(t); ) {
                    k.push(t), E.push(t);
                    break;
                }
                for (a = 0; a < C.length; a++) for (
                    e = new RegExp(C[a]); e.test(t); ) {
                    q.push(t), E.push(t);
                    break;
                }
                for (a = 0; a < P.length; a++) for (
                    e = new RegExp(P[a]); e.test(t); ) {
                    A.push(t), E.push(t);
                    break;
                }
                for (a = 0; a < regexURL_ThatCauseBUGS.length; a++) for (
                    e = new RegExp(regexURL_ThatCauseBUGS[a]); e.test(t); ) {
                    L.push(t), E.push(t);
                    break;
                }
                for (a = 0; a < U.length; a++) for (
                    e = new RegExp(U[a]); e.test(t); ) {
                    x.push(t), E.push(t);
                    break;
                }
                for (a = 0; a < G.length; a++) if (e = new RegExp(G[a]),
                                                   fetch(t)) for (;isInArray(t, x); ) {
                    for (;e.test(t); ) {
                        I.push(t), E.push(t);
                        break;
                    }
                    break;
                } else if (notInArray(t, P)) for (;e.test(t); ) {
                    I.push(t), E.push(t);
                    break;
                }
                if (flat(j), flat(k), flat(q), flat(A), flat(I), flat(E), isInArray(t, E)) {
                    for (;isInArray(t, x); ) {
                        if (window.console) for (;notInArray(0, P); ) {
                            console.log(options.pre, options.brw, "\n[!] " + t + " " + translate("st9"), "\n" + translate("st10") + "\n\n");
                            break;
                        }
                        break;
                    }
                    for (;isInArray(t, I); ) {
                        if (window.console) for (;fetch(t); ) {
                            console.log(options.pre, options.brw, "\n[!] " + t + " " + translate("st9"), "\n" + translate("st10") + "\n\n");
                            break;
                        }
                        break;
                    }
                    for (;isInArray(t, j); ) {
                        window.console && console.log(options.pre, options.red, "\n[\u2717] " + t + " " + translate("st1"), "\n" + translate("st2") + "\n\n");
                        break;
                    }
                    for (;isInArray(t, k); ) {
                        window.console && console.log(options.pre, options.org, "\n[-] " + t + " " + translate("st3"), "\n" + translate("st4") + "\n\n");
                        break;
                    }
                    for (;isInArray(t, q); ) {
                        window.console && console.log(options.pre, options.grn, "\n[\u2714] " + t + " " + translate("st5"), "\n" + translate("st6") + "\n\n");
                        break;
                    }
                    for (;isInArray(t, A); ) {
                        window.console && console.log(options.pre, options.blu, "\n[~] " + t + " " + translate("st7"), "\n" + translate("st8") + "\n\n");
                        break;
                    }
                    for (;isInArray(t, L); ) {
                        window.console && console.log(options.pre, options.ylw, "\n[\u2717] " + t + " " + translate("st16"), "\n" + translate("st17") + "\n\n");
                        break;
                    }
                } else "" === t ? window.console : window.console && t.match(protocolsRequired) ? console.log(options.pre, options.prp, "\n[!] " + t + " " + translate("st7"), "\n" + translate("st11") + "\n\n") : console.log(options.pre, options.prp, "\n[!] " + t + " ( I am an addon )\n\n");
            }
        }(), win.addEventListener("beforescriptexecute", function load(aim) {
            var action, s = aim.target.src; //e.target.innerHTML,
            -1 !== s.search(N) && protocolsRequired.test(t) && (count++, aim.preventDefault(),
                                                                aim.stopPropagation(),
                                                                action = preloadScript,
                                                                head.appendChild(doc.createElement("script")).innerHTML = action.toString().replace(/^function.*{|}$/g, "")),
                2 == count && win.removeEventListener(aim.type, load, !0);
        }, !0),
            done = function() {
            if (window.console) {
                var e = [].concat(regexURL_thatCanBeBLOCK, Z).sort(), a = [].concat(C, P).sort(), lines = [];
                lines.push("!\n! " + translate("st15") + "\n!\n! URLS " + translate("st19") + "\n! ---------------------------\n"),
                    e.forEach(function(e) {
                    e = e.toString().replace(/\/(g)?$/, '/$').replace(/\.js\/(\$)?$/, '\.js/$script,'),
                        lines.push(e + "important\n");
                }), lines.push("!\n! URLS " + translate("st18") + "\n! ---------------------------\n"), a.forEach(function(e) {
                    e = e.toString().replace(/\/g$/,'/'), lines.push("@@" + e + "\n");
                });
                /** @type {string} */
                var s = lines.join("");
                console.groupCollapsed(options.pre, options.ttl, translate("st13"), "\t\t" + translate("st14") + "\n\n"), console.log(options.pre, "%s", "! #########################################################################################################################\n" + s + "\n! #########################################################################################################################"),
                    console.groupEnd();
            }
        }, (doc.attachEvent ? "complete" === doc.readyState : "loading" !== doc.readyState) ? done() : doc.addEventListener("DOMContentLoaded", done);
    }, 100);
}();
